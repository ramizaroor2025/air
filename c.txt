#include <iostream>
#include <stdio.h>
using namespace std;

#define MAX 20

struct queue {
    int x[MAX];
    int front;
    int rear;
} q;

void enqueue(int);
int dequeue();
void display();

int main() {
    q.front = -1;
    q.rear = -1;

    int ch, x, flag = 1;

    while (flag) {
        printf("\n1. Enqueue\n2. Dequeue\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                printf("Enter element: ");
                scanf("%d", &x);
                enqueue(x);
                break;

            case 2:
                x = dequeue();
                if (x != -1)
                    printf("Removed: %d\n", x);
                break;

            case 3:
                display();
                break;

            case 4:
                flag = 0;
                break;

            default:
                printf("Wrong choice\n");
        }
    }

    return 0;
}

void enqueue(int val) {
    if (q.rear == MAX - 1) {
        printf("Queue is full!\n");
        return;
    }
    if (q.front == -1)
        q.front = 0;
    q.rear++;
    q.x[q.rear] = val;
    printf("Inserted %d\n", val);
}

int dequeue() {
    if (q.front == -1 || q.front > q.rear) {
        printf("Queue is empty!\n");
        return -1;
    }
    int val = q.x[q.front];
    q.front++;
    return val;
}

void display() {
    if (q.front == -1 || q.front > q.rear) {
        printf("Queue is empty!\n");
        return;
    }
    printf("Queue elements: ");
    for (int i = q.front; i <= q.rear; i++) {
        printf("%d ", q.x[i]);
    }
    printf("\n");
}
